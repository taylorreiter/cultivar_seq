sudo apt-get update && \
sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \
        default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \
        python-matplotlib python-pip python-virtualenv sysstat fastqc \
        trimmomatic bowtie samtools blast2 wget bowtie2 openjdk-8-jre \
        hmmer ruby

cd ~/
python2.7 -m virtualenv pondenv
source pondenv/bin/activate
cd pondenv
pip install -U setuptools
git clone --branch v2.0 https://github.com/dib-lab/khmer.git
cd khmer
make install

## RUN THIS EVERY TIME NEW SESSION/TERMINAL IS STARTED
source ~/pondenv/bin/activate

(see old protocol code for trinity installation & dependencies)

echo export PATH=$PATH:$(pwd) >> ~/pondenv/bin/activate
source ~/pondenv/bin/activate

# Transrate
cd
curl -LO https://bintray.com/artifact/download/blahah/generic/transrate-1.0.3-linux-x86_64.tar.gz
tar -zxf transrate-1.0.3-linux-x86_64.tar.gz
echo 'export PATH=$PATH:"$HOME/transrate-1.0.3-linux-x86_64"' >> ~/pondenv/bin/activate
curl -LO ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.3.0/ncbi-blast-2.3.0+-x64-linux.tar.gz
tar -zxf ncbi-blast-2.3.0+-x64-linux.tar.gz
echo 'export PATH="$HOME/ncbi-blast-2.3.0+/bin:$PATH"' >> ~/pondenv/bin/activate
source ~/pondenv/bin/activate

# Busco
cd
git clone https://gitlab.com/ezlab/busco.git
cd busco
echo "export PATH=$PATH:$(pwd)" >> ~/pondenv/bin/activate
curl -OL http://busco.ezlab.org/datasets/metazoa_odb9.tar.gz
curl -OL http://busco.ezlab.org/datasets/eukaryota_odb9.tar.gz
tar -xzvf metazoa_odb9.tar.gz
tar -xzvf eukaryota_odb9.tar.gz
source ~/pondenv/bin/activate

# Salmon
cd
curl -LO https://github.com/COMBINE-lab/salmon/releases/download/v0.7.2/Salmon-0.7.2_linux_x86_64.tar.gz
tar -xvzf Salmon-0.7.2_linux_x86_64.tar.gz
cd Salmon*/bin
echo export PATH=$PATH:$(pwd) >> ~/pondenv/bin/activate
source ~/pondenv/bin/activate

# make mnt writeable
sudo chmod a+rwxt /mnt

# sub directories
cd /mnt
mkdir -p work work/data
cd /mnt/work/data

export PROJECT=/mnt/work

(moving 'cultivars' from old code >> 
mv ~/cultivars /mnt/work/cultivars

## "data" in eel pond protocol will be called "cultivars" from here forward

# make sure PROJECT location has been defined:
set -u
printf "\nMy raw data is in $PROJECT/cultivars/, and consists of $(ls -1 ${PROJECT}/cultivars/*.fastq.gz | wc -l) files\n\n"
set +u

# make workspace for quality trimming
cd ${PROJECT}
mkdir -p quality
cd quality

# link data to new workspace
ln -s ../cultivars/*.fastq.gz .

# check to make sure it worked
printf "I see $(ls -1 *.fastq.gz | wc -l) files here.\n"

# Skipping fastqc, already complete (see old code)

#
