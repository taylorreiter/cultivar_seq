# ubuntu/images/hvm/ubuntu-wily-15.10-amd64-server-20160222 (ami-05384865)

# ssh into IP address 
ssh ubuntu@XXXXX -i /path/to/pem

# At launch:

set -x
set -e

sudo apt-get -y update
sudo apt-get -y install r-base python3-matplotlib libzmq3-dev python3.5-dev texlive-latex-extra texlive-latex-recommended python3-virtualenv

sudo apt-get -y update
sudo apt-get -y install r-base python-matplotlib libzmq3-dev python2.7-dev texlive-latex-extra texlive-latex-recommended python-virtualenv


tmux new # create new
# control-b d
tmux a # reattach

# Install relevant software SRA toolkit
wget http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.1-3/sratoolkit.2.8.1-3-ubuntu64.tar.gz
tar -xzf sratoolkit.current-ubuntu64.tar.gz
export PATH=$PATH:/directory/sratoolkit.2.8.1-3-ubuntu64/bin
# sudo apt-get install sra-toolkit # installs too old of a system to diable cache

# disable cache
./vdb-config --interactive-mode 'textual'
6
Y # then press enter

# download files
cd ~
mkdir cultivars
nano sra-download-for-trinity.sh

for accession in SRR926281 SRR926282 SRR926283 SRR926284 SRR926285 SRR926286 SRR926287
do
~/sratoolkit.2.8.1-3-ubuntu64/bin/fastq-dump.2.8.1-3 --defline-seq '@$sn[_$rn]/$ri' ${accession} --gzip
done 

tmux new
sh sra-download-for-trinity.sh

sudo apt-get update
sudo apt-get -y install screen git curl gcc make g++ python-dev unzip default-jre \
           pkg-config libncurses5-dev r-base-core r-cran-gplots \
           python-matplotlib python-pip python-virtualenv sysstat fastqc \
           trimmomatic fastx-toolkit bowtie samtools blast2

# set variable for thread number
THREADS=4

# Install khmer
cd ${HOME}
mkdir -p projects/eelpond
python2.7 -m virtualenv projects/eelpond/env
source ${HOME}/projects/eelpond/env/bin/activate
mkdir -p src
cd src
git clone --branch v1.3 https://github.com/ged-lab/khmer.git
cd khmer
sudo make install

# Link data downloaded from SRA into working directory
cd ${HOME}
mkdir -p projects/eelpond/raw
cd projects/eelpond/raw

ln -fs ${HOME}/cultivars/*.fastq.gz .

# Install dropbox
wget -O dropbox.tar.gz "http://www.dropbox.com/download/?plat=lnx.x86_64"
tar -xvzf dropbox.tar.gz
~/.dropbox-dist/dropboxd &
# copy and paste link and login

mkdir -p ${HOME}/Dropbox/fastqc
cd ${HOME}/projects/eelpond/raw/
fastqc --threads ${THREADS:-1} *.fastq.gz --outdir=${HOME}/Dropbox/fastqc

# Build Illumina adapter file
cd ~/projects/eelpond
nano Illumina-adaptors.fa

# see file in repo
# https://github.com/taylorreiter/IGI_preproposal/blob/master/computational_pilot/RNA-seq/Illumina-adaptors.fa
--------------------------------------------------------------------
# Run pipeline on one file to ensure it works

# Trimming!
mkdir ${HOME}/projects/eelpond/trimming_temp
mkdir ${HOME}/projects/eelpond/trimmed

cd ${HOME}/projects/eelpond/trimming_temp


TrimmomaticSE ~/projects/eelpond/raw/SRR926282.fastq.gz ~/projects/eelpond/trimmed/SRR926282_trim.fastq.gz ILLUMINACLIP:${HOME}/projects/eelpond/Illumina-adaptors.fa:2:30:10 LEADING:2 TRAILING:2 SLIDINGWINDOW:4:2 MINLEN:25

# make it hard to mess files up
cd ../trimmed
chmod u-w *

# clear the temporary files
cd ../trimming_temp
rm *

# Remember to source khmer:
source ${HOME}/projects/eelpond/env/bin/activate

# single end data digital normalization
cd ${HOME}/projects/eelpond/
mkdir diginorm
cd diginorm
#normalize-by-median.py --cutoff 20 --loadtable normC20k20.ct \
#  --savetable normC20k20.ct ../trimmed/*fastq.gz

normalize-by-median.py --ksize 20 --cutoff 20 --n_tables 4 \
  --min-tablesize 13e8 --savetable normC20k20.ct \
  ../trimmed/*fastq.gz

# trim erroneous k-mers
cd ${HOME}/projects/eelpond
mkdir abundfilt
cd abundfilt
filter-abund.py --variable-coverage ../diginorm/normC20k20.ct \
  --threads ${THREADS:-1} ../diginorm/*.keep
  
# Trinity install  
mkdir -p ${HOME}/src
cd ${HOME}/src

wget https://github.com/trinityrnaseq/trinityrnaseq/archive/Trinity-v2.4.0.tar.gz
tar xzf Trinity-v2.4.0.tar.gz
cd trinityrnaseq*/
make
make plugins

# Install java 1.8
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

# Install bowtie2
sudo apt-get install bowtie2

# test trinity
#cd sample_data/test_Trinity_Assembly/
#./runMe.sh

# Run trinity
cd ${HOME}/projects/eelpond
${HOME}/src/trinityrna*/Trinity --seqType fq --max_memory 10G --CPU ${THREADS:-2} --single ~/projects/eelpond/abundfilt/*abundfilt

# failed. Try:
${HOME}/src/trinityrna*/Trinity --seqType fq --max_memory 15G --CPU ${THREADS:-2} --single ~/projects/eelpond/trimmed/SRR926282_trim.fastq.gz

           # Memory needed: 1GB of RAM per 1 million reads
           # Timing: Â½ - 1 hours per 1 million reads (does not include trimming or normalization)

# failed. Upgrade instance, try:
${HOME}/src/trinityrna*/Trinity --seqType fq --max_memory 31G --CPU ${THREADS:-2} --single ~/projects/eelpond/trimmed/SRR926282_trim.fastq.gz
